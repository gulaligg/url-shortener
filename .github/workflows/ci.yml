name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: url_shortener
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.14.0'

      - name: Install backend deps
        working-directory: ./api
        run: npm ci

      - name: Lint
        working-directory: ./api
        run: npm run lint

      - name: Run unit tests & coverage
        working-directory: ./api
        run: npm test -- --coverage

      - name: Push Prisma schema to database
        working-directory: ./api
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/url_shortener
        run: npx prisma db push --accept-data-loss

      - name: Run e2e tests
        working-directory: ./api
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/url_shortener
          REDIS_URL: redis://localhost:6379
        run: npm run test:e2e

  frontend:
    needs: backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.14.0'

      - name: Install deps & build
        working-directory: ./frontend
        run: |
          npm ci
          npm run build

      - name: Run lint
        working-directory: ./frontend
        run: npm run lint
